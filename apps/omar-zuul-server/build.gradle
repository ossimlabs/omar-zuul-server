buildscript {
   ext {
      springBootVersion = '1.5.9.RELEASE'
     baseImage = "omar-base"
     dockerStatementsOverride = {
       [
          "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",

          "MAINTAINER DigitalGlobe-RadiantBlue",
          """LABEL com.digitalglobe.version="" """,
          "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar /home/omar",
          "WORKDIR /home/omar",
          "VOLUME /dev/random /home /Users",
          "EXPOSE 8761",
          "CMD java -Xms256m -Xmx1024m -Dspring.profiles.active=production -Djava.security.egd=file:/dev/./urandom -Dserver.contextPath=/omar-zuul-server -jar /home/omar/${project.name}-${buildVersion}-${buildVersionTag}.jar"

       ]
     }
   }
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
      apply from: System.env.OMAR_COMMON_PROPERTIES
  }
   repositories {
      mavenLocal()
      maven { url "${ossimMavenProxy}" }
      mavenCentral()
   }
   dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
   }
}

plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"

group "io.ossim.omar.apps"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  mavenCentral()
}


dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-zuul')
	compile('org.codehaus.groovy:groovy')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR5"
	}
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
